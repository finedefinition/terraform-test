version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    image: node:18-alpine
    working_dir: /app
    user: "1000:1000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: >
      sh -c "
        npm install --production &&
        if [ -f package.json ] && grep -q 'build' package.json; then
          npm run build && npx serve -s build -l 3000
        else
          python3 -m http.server 3000
        fi
      "
    expose:
      - "3000"
    restart: unless-stopped
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /app/.npm

  backend:
    image: python:3.11-slim
    working_dir: /app
    user: "1000:1000"
    env_file:
      - /opt/app/.env
    volumes:
      - ./backend:/app
    command: >
      sh -c "
        apt-get update && apt-get install -y gcc &&
        pip install --no-cache-dir -r requirements.txt &&
        python migrate.py &&
        gunicorn --bind 0.0.0.0:80 --workers 2 --timeout 60 --user 1000 --group 1000 app-secure:app
      "
    expose:
      - "80"
    restart: unless-stopped
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/log

networks:
  app-network:
    driver: bridge