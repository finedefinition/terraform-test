version: '3.8'

services:

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    image: node:18-alpine
    working_dir: /app
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=/api
    volumes:
      - ./frontend:/app
    command: >
      sh -c "
        if [ -f package.json ] && grep -q 'build' package.json; then
          npm install --production &&
          npm run build &&
          npx serve -s build -l 3000
        else
          echo 'Frontend build not configured, serving static files with Node.js' &&
          npx serve public -l 3000
        fi
      "
    expose:
      - "3000"
    restart: unless-stopped
    networks:
      - app-network

  backend:
    image: python:3.11-slim
    working_dir: /app
    environment:
      - NODE_ENV=production
      - PORT=8080
      - DB_SECRET_NAME=${DB_SECRET_NAME}
      - AWS_REGION=${AWS_REGION}
      - AWS_DEFAULT_REGION=${AWS_REGION}
      - AWS_METADATA_SERVICE_TIMEOUT=5
      - AWS_METADATA_SERVICE_NUM_ATTEMPTS=3
    volumes:
      - ./backend:/app
    ports:
      - "8080:8080"
    command: >
      sh -c "
        apt-get update && apt-get install -y gcc curl &&
        pip install --no-cache-dir -r requirements.txt &&
        gunicorn --bind 0.0.0.0:8080 --workers 2 --timeout 60 app:app
      "
    restart: unless-stopped
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  app-network:
    driver: bridge

volumes:
  node_modules_frontend:
  node_modules_backend:
